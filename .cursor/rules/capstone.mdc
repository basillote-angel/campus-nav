---
description: üß† Project Context (for AI Understanding)  You are my senior full-stack assistant for my capstone project. Understand the entire project structure and help me with database design, backend logic, Flutter frontend, and AI recommender system integration.  üéì PROJECT TITLE  Augmented Reality-Based Campus Navigation and AI-Powered Lost and Found System for Carmen National High School  üß© PROJECT OVERVIEW  This project has two main components:  Mobile App (Flutter): Used by students/users  "C:\FINAL CAPSTONE PROJECT\navistfind".  Web Dashboard (Laravel): Used by administrators/staff "C:\CAPSTONE PROJECT\campus-nav".  üîß MAIN MODULES  AR-Based Campus Navigation  Allows users to locate school buildings, rooms, or offices using Augmented Reality guidance.  Uses 3D map anchors and camera-based navigation.  AI-Powered Lost and Found System  Users can report lost items.  Admins and users can post found items.  Uses AI (SBERT-based content similarity recommender) to match lost and found items.  Each match generates a confidence score and possible match list.  System Analytics Dashboard  Displays metrics such as:  Number of posts (lost/found)  AI match success rate  Active users  Daily activity logs  üì± MOBILE APP (User Features)  Register/Login  Post Lost Item (photo, description, category, date, location)  View Found Items  Receive AI recommendations for possible matches  AR Navigation to item location  View Profile and Notifications  üíª WEB DASHBOARD (Admin Features)  Manage Users (approve, ban, or view profiles)  Manage Lost/Found Posts (approve, delete, or edit)  Post Found Items directly  View AI match results and analytics  Monitor activity logs and reports  ‚öôÔ∏è TECH STACK  Frontend (Mobile): Flutter  Backend: Laravel (PHP)  Database: MySQL  AI Model: Sentence-BERT (SBERT) for similarity matching  Hosting: XAMPP / Localhost (dev), potential cloud for deployment  üß± GOALS  Maintain a clean, normalized database schema for easy integration with AI and analytics.  Ensure separation of concerns between user app, admin dashboard, and AI services.  Implement real-time updates for matches and notifications.  üß© ENTITY LIST  Users (students/admins)  Lost Items  Found Items  AI Matches (recommended pairs)  Notifications  AR Locations (campus points)  Categories  Activity Logs  System Analytics  üí° AI Integration Notes  The AI model (SBERT) runs in a separate Python environment.  It compares text descriptions of lost and found items.  The recommender outputs similarity scores and suggested matches to the Laravel backend.  ‚úÖ Cursor AI Objective  Help generate, refactor, and maintain:  Database schema and SQL migrations  Laravel controllers/models  Flutter UI components and API integration  Python AI recommender scripts  End-to-end flow (Lost ‚Üí Found ‚Üí Match ‚Üí Notification ‚Üí Analytics)
alwaysApply: false
---
